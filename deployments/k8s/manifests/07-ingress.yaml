apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fortinet-ingress
  labels:
    app: fortinet
    app.kubernetes.io/name: fortinet
    app.kubernetes.io/component: ingress
    app.kubernetes.io/managed-by: argocd
  annotations:
    # Traefik Ingress 설정
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt
    # 보안 헤더
    traefik.ingress.kubernetes.io/router.middlewares: default-security-headers@kubernetescrd
    # 요청 제한
    traefik.ingress.kubernetes.io/router.middlewares: default-rate-limit@kubernetescrd
    # GitOps 관리 표시
    gitops.argocd.argoproj.io/managed: "true"
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - fortinet.jclee.me
    secretName: fortinet-tls
  rules:
  - host: fortinet.jclee.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fortinet
            port:
              number: 80
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: security-headers
  labels:
    app: fortinet
    app.kubernetes.io/name: fortinet
    app.kubernetes.io/managed-by: argocd
spec:
  headers:
    customRequestHeaders:
      X-Forwarded-Proto: https
    customResponseHeaders:
      X-Frame-Options: DENY
      X-Content-Type-Options: nosniff
      X-XSS-Protection: "1; mode=block"
      Referrer-Policy: strict-origin-when-cross-origin
      Content-Security-Policy: "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'"
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: rate-limit
  labels:
    app: fortinet
    app.kubernetes.io/name: fortinet
    app.kubernetes.io/managed-by: argocd
spec:
  rateLimit:
    average: 100
    burst: 200
    period: 1m