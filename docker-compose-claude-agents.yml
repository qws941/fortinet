version: '3.8'

services:
  # Claude Agent Orchestrator - Main coordinator
  claude-orchestrator:
    build:
      context: .
      dockerfile: Dockerfile.claude-agent
    container_name: claude-orchestrator
    restart: unless-stopped
    command: ["python", "-u", "claude-agent-orchestrator.py"]
    environment:
      - PYTHONUNBUFFERED=1
      - AGENT_TYPE=orchestrator
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - LOG_LEVEL=INFO
    volumes:
      - ./logs/orchestrator:/var/log/agent
      - ./config/agents:/app/config:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - claude-net
      - monitoring
    depends_on:
      - redis
      - rabbitmq
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'

  # Claude Analyzer Agents (Scale: 2)
  claude-analyzer:
    build:
      context: .
      dockerfile: Dockerfile.claude-agent
    command: ["python", "-u", "claude-agent-worker.py"]
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - AGENT_TYPE=analyzer
      - AGENT_CAPABILITIES=code_analysis,pattern_detection,metrics
      - REDIS_URL=redis://redis:6379
      - ORCHESTRATOR_URL=http://claude-orchestrator:8080
    volumes:
      - ./logs/analyzer:/var/log/agent
      - ./workspace:/app/workspace:ro
    networks:
      - claude-net
      - monitoring
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Claude Executor Agents (Scale: 3)
  claude-executor:
    build:
      context: .
      dockerfile: Dockerfile.claude-agent
    command: ["python", "-u", "claude-agent-worker.py"]
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - AGENT_TYPE=executor
      - AGENT_CAPABILITIES=code_execution,testing,deployment
      - REDIS_URL=redis://redis:6379
      - ORCHESTRATOR_URL=http://claude-orchestrator:8080
    volumes:
      - ./logs/executor:/var/log/agent
      - ./workspace:/app/workspace
    networks:
      - claude-net
      - monitoring
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 1G
          cpus: '1.0'

  # Claude Monitor Agent
  claude-monitor:
    build:
      context: .
      dockerfile: Dockerfile.claude-agent
    container_name: claude-monitor
    command: ["python", "-u", "claude-agent-worker.py"]
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - AGENT_TYPE=monitor
      - AGENT_CAPABILITIES=health_check,performance_monitoring,alerting
      - REDIS_URL=redis://redis:6379
      - PROMETHEUS_URL=http://prometheus:9090
      - GRAFANA_URL=http://grafana:3000
    volumes:
      - ./logs/monitor:/var/log/agent
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - claude-net
      - monitoring
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Claude Researcher Agents (Scale: 2)
  claude-researcher:
    build:
      context: .
      dockerfile: Dockerfile.claude-agent
    command: ["python", "-u", "claude-agent-worker.py"]
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
      - AGENT_TYPE=researcher
      - AGENT_CAPABILITIES=web_search,documentation,learning
      - REDIS_URL=redis://redis:6379
      - ORCHESTRATOR_URL=http://claude-orchestrator:8080
    volumes:
      - ./logs/researcher:/var/log/agent
      - ./knowledge:/app/knowledge
    networks:
      - claude-net
      - monitoring
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Redis for inter-agent communication
  redis:
    image: redis:7-alpine
    container_name: claude-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - claude-net
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  # RabbitMQ for task queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: claude-rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin123
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - claude-net
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Agent Dashboard (Web UI)
  claude-dashboard:
    image: nginx:alpine
    container_name: claude-dashboard
    restart: unless-stopped
    volumes:
      - ./dashboard:/usr/share/nginx/html:ro
    networks:
      - claude-net
    ports:
      - "8090:80"
    depends_on:
      - claude-orchestrator
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'

networks:
  claude-net:
    driver: bridge
  monitoring:
    external: true
    name: tmux_monitoring

volumes:
  redis-data:
    driver: local
  rabbitmq-data:
    driver: local