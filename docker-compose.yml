version: '3.8'

services:
  # FortiGate Application
  fortinet-app:
    build:
      context: ./src
      dockerfile: Dockerfile
    image: fortinet-app:latest
    container_name: fortinet-app
    depends_on:
      - fortinet-redis
      - fortinet-pg
    ports:
      - "7777:7777"
    environment:
      - APP_MODE=${APP_MODE:-production}
      - WEB_APP_PORT=7777
      - REDIS_HOST=fortinet-redis
      - REDIS_PORT=6379
      - DATABASE_URL=postgresql://fortinet:fortinet123@fortinet-pg:5432/fortinet
      - PYTHONPATH=/app/src
    volumes:
      - app-data:/app/data
      - app-logs:/app/logs
    networks:
      - fortinet-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7777/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  fortinet-redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    image: fortinet-redis:latest
    container_name: fortinet-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - fortinet-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  # PostgreSQL Database
  fortinet-pg:
    build:
      context: ./postgresql
      dockerfile: Dockerfile
    image: fortinet-pg:latest
    container_name: fortinet-pg
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=fortinet
      - POSTGRES_USER=fortinet
      - POSTGRES_PASSWORD=fortinet123
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - fortinet-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fortinet -d fortinet"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  fortinet-network:
    driver: bridge

volumes:
  app-data:
  app-logs:
  redis-data:
  pg-data: