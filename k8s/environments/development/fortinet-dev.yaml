apiVersion: v1
kind: Namespace
metadata:
  name: fortinet-dev
  labels:
    environment: development
    app: fortinet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fortinet-dev
  namespace: fortinet-dev
  labels:
    app: fortinet
    environment: development
    version: develop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fortinet
      environment: development
  template:
    metadata:
      labels:
        app: fortinet
        environment: development
        version: develop
    spec:
      containers:
      - name: fortinet
        image: registry.jclee.me/fortinet:develop
        imagePullPolicy: Always
        ports:
        - containerPort: 7777
          name: http
        env:
        - name: APP_MODE
          value: "development"
        - name: ENVIRONMENT
          value: "development"
        - name: WEB_APP_PORT
          value: "7777"
        - name: OFFLINE_MODE
          value: "true"
        - name: REDIS_URL
          value: "redis://redis-dev:6379"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 7777
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 7777
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
      imagePullSecrets:
      - name: registry-secret
---
apiVersion: v1
kind: Service
metadata:
  name: fortinet-dev
  namespace: fortinet-dev
  labels:
    app: fortinet
    environment: development
spec:
  selector:
    app: fortinet
    environment: development
  ports:
  - name: http
    port: 80
    targetPort: 7777
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fortinet-dev
  namespace: fortinet-dev
  labels:
    app: fortinet
    environment: development
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
    traefik.ingress.kubernetes.io/router.middlewares: default-redirect-https@kubernetescrd
spec:
  rules:
  - host: dev-fortinet.jclee.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fortinet-dev
            port:
              number: 80
---
# Redis for development environment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-dev
  namespace: fortinet-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      environment: development
  template:
    metadata:
      labels:
        app: redis
        environment: development
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: redis-dev
  namespace: fortinet-dev
spec:
  selector:
    app: redis
    environment: development
  ports:
  - port: 6379
    targetPort: 6379
  type: ClusterIP